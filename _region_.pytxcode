=>PYTHONTEX#py#default#default#0#code#####1366#
    d_st = 7800
    d_al = 2300
    d_cf = 1500
    y_st = 1200*10**6
    y_al = 400*10**6
    y_cf = 350*10**6

    N_s = 2
    F = 50000
    L = 2

    A_st = N_s * F / y_st
    A_al = N_s * F / y_al
    A_cf = N_s * F / y_cf
=>PYTHONTEX#py#default#default#1#i#####1386#
'\\num{'+str('{:.2e}'.format(A_st))+'}'
=>PYTHONTEX#py#default#default#2#i#####1387#
'\\num{'+str('{:.2e}'.format(A_al))+'}'
=>PYTHONTEX#py#default#default#3#i#####1388#
'\\num{'+str('{:.2e}'.format(A_cf))+'}'
=>PYTHONTEX#py#default#default#4#code#####1399#
    m_st = d_st * A_st * L
    m_al = d_al * A_al * L
    m_cf = d_cf * A_cf * L
=>PYTHONTEX#py#default#default#5#i#####1410#
round(m_st,2)
=>PYTHONTEX#py#default#default#6#i#####1411#
round(m_al,2)
=>PYTHONTEX#py#default#default#7#i#####1412#
round(m_cf,2)
=>PYTHONTEX#py#default#default#8#i#####1436#
'\\num{'+str('{:.2e}'.format(d_st/y_st))+'}'
=>PYTHONTEX#py#default#default#9#i#####1437#
'\\num{'+str('{:.2e}'.format(d_al/y_al))+'}'
=>PYTHONTEX#py#default#default#10#i#####1438#
'\\num{'+str('{:.2e}'.format(d_cf/y_cf))+'}'
=>PYTHONTEX#py#default#default#11#i#####4535#
round((1200*10**6)**(2/3)/7800,0)
=>PYTHONTEX#py#default#default#12#i#####4536#
round((350*10**6)**(2/3)/1500,0)
=>PYTHONTEX#py#default#default#13#i#####4537#
round((400*10**6)**(2/3)/2300,0)
=>PYTHONTEX#py#default#default#14#i#####4552#
round(3*2000*0.5/4)
=>PYTHONTEX#py#default#default#15#i#####4558#
round((2*4*750/350/10**6/3.1416)**(1/3),4)
=>PYTHONTEX#py#default#default#15#i#####4558#
round((2*4*750/350/10**6/3.1416)**(1/3),4)
=>PYTHONTEX#py#default#default#16#i#####4814#
round(2500*0.6/4)
=>PYTHONTEX#py#default#default#16#i#####4814#
round(2500*0.6/4)
=>PYTHONTEX#py#default#default#17#i#####4821#
round(2000*0.05 - 500*0.05)
=>PYTHONTEX#py#default#default#17#i#####4821#
round(2000*0.05 - 500*0.05)
=>PYTHONTEX#py#default#default#18#code#####4967#
    import math
    K = 2
    L = 3
    S_y = 300*10**6
    E = 210*10**9
    lambda_c = math.sqrt(2*math.pi**2*E/S_y)
=>PYTHONTEX#py#default#default#19#i#####4981#
round(lambda_c)
=>PYTHONTEX#py#default#default#19#i#####4981#
round(lambda_c)
=>PYTHONTEX#py#default#default#20#code#####4985#
    designation = ['W360 $\\times$ 39', 'W360 $\\times$ 45', 'W200 $\\times$ 36', 'W150 $\\times$ 22']
    r_g = [27.5*10**-3, 37.8*10**-3, 40.9*10**-3, 36.8*10**-3]
    Area = [4960*10**-6, 5710*10**-6, 4570*10**-6, 2860*10**-6]
    lamda = [0,0,0,0]
    sigma_allow = [0,0,0,0]
    P_allow = [0,0,0,0]
    for i in range(4):
      lamda[i] = K*L/r_g[i]
      if lamda[i] <= lambda_c:
        sigma_allow[i] = (1 - lamda[i]**2/(2*lambda_c**2))*S_y/(5/3 + 3*lamda[i]/(8*lambda_c) - lamda[i]**3/(8*lambda_c**3))
      else:
        sigma_allow[i] = 12/23*math.pi**2*E/lamda[i]**2
      P_allow[i] = sigma_allow[i]*Area[i]

    print(r'\begin{table}[H]')
    print(r'\centering')
    print(r'\begin{tabular}{lccccc}')
    print(r'\toprule')
    print(r'Designation & $r_g$ (mm) & $A$ (mm$^2$) & $\lambda$ & $\sigma_{allow}$ (MPa) & $P_{allow}$ (kN) \\')
    print('\midrule')
    for i in range(4):
      print(r'%s & %.1f & %.0f & %.0f & %.1f & %.0f \\' %(designation[i], r_g[i]*10**3 ,Area[i]*10**6, lamda[i], sigma_allow[i]/10**6, P_allow[i]/10**3))
    print(r'\bottomrule')
    print(r'\end{tabular}')
    print(r'\end{table}')
=>PYTHONTEX#py#default#default#21#code#####5083#
    N = 2
    F1 = 100
    F2 = 300
    L_l = 0.25
    L_r = 0.25
    L   = 1
    theta = math.radians(15)
    F_l = (F2*L_r + F1*(L - L_l))/L
    F_r = F1 + F2 - F_l
    M = F_r * L_r * math.cos(theta)
    S_y = 300 * 10**6
    E  = 70 * 10**9
    S = N * M / S_y
    I_l = N * F_l * L**2 / math.pi**2 / E
    I_r = N * F_r * L**2 / math.pi**2 / E
    lambda_c = ((math.pi**2*E)/S_y)**0.5
    K = 2
    r_g = 15.5*0.001
=>PYTHONTEX#py#default#default#22#i#####5104#
int(F_l)
=>PYTHONTEX#py#default#default#23#i#####5104#
int(F_r)
=>PYTHONTEX#py#default#default#24#i#####5142#
round(M,1)
=>PYTHONTEX#py#default#default#25#i#####5148#
N
=>PYTHONTEX#py#default#default#26#i#####5148#
round(M,1)
=>PYTHONTEX#py#default#default#27#i#####5148#
'\\num{'+str('{:.2e}'.format(S_y))+'}'
=>PYTHONTEX#py#default#default#28#i#####5148#
'\\num{'+str('{:.2e}'.format(S))+'}'
=>PYTHONTEX#py#default#default#29#i#####5148#
'\\num{'+str('{:.2e}'.format(S*10**9))+'}'
=>PYTHONTEX#py#default#default#25#i#####5148#
N
=>PYTHONTEX#py#default#default#26#i#####5148#
round(M,1)
=>PYTHONTEX#py#default#default#27#i#####5148#
'\\num{'+str('{:.2e}'.format(S_y))+'}'
=>PYTHONTEX#py#default#default#28#i#####5148#
'\\num{'+str('{:.2e}'.format(S))+'}'
=>PYTHONTEX#py#default#default#29#i#####5148#
'\\num{'+str('{:.2e}'.format(S*10**9))+'}'
=>PYTHONTEX#py#default#default#30#i#####5160#
N
=>PYTHONTEX#py#default#default#31#i#####5160#
round(F_l)
=>PYTHONTEX#py#default#default#32#i#####5160#
L
=>PYTHONTEX#py#default#default#33#i#####5160#
'\\num{'+str('{:.2e}'.format(E))+'}'
=>PYTHONTEX#py#default#default#34#i#####5160#
'\\num{'+str('{:.2e}'.format(I_l))+'}'
=>PYTHONTEX#py#default#default#35#i#####5160#
N
=>PYTHONTEX#py#default#default#36#i#####5160#
round(F_r)
=>PYTHONTEX#py#default#default#37#i#####5160#
L
=>PYTHONTEX#py#default#default#38#i#####5160#
'\\num{'+str('{:.2e}'.format(E))+'}'
=>PYTHONTEX#py#default#default#39#i#####5160#
'\\num{'+str('{:.2e}'.format(I_r))+'}'
=>PYTHONTEX#py#default#default#30#i#####5160#
N
=>PYTHONTEX#py#default#default#31#i#####5160#
round(F_l)
=>PYTHONTEX#py#default#default#32#i#####5160#
L
=>PYTHONTEX#py#default#default#33#i#####5160#
'\\num{'+str('{:.2e}'.format(E))+'}'
=>PYTHONTEX#py#default#default#34#i#####5160#
'\\num{'+str('{:.2e}'.format(I_l))+'}'
=>PYTHONTEX#py#default#default#35#i#####5160#
N
=>PYTHONTEX#py#default#default#36#i#####5160#
round(F_r)
=>PYTHONTEX#py#default#default#37#i#####5160#
L
=>PYTHONTEX#py#default#default#38#i#####5160#
'\\num{'+str('{:.2e}'.format(E))+'}'
=>PYTHONTEX#py#default#default#39#i#####5160#
'\\num{'+str('{:.2e}'.format(I_r))+'}'
=>PYTHONTEX#py#default#default#40#i#####5171#
'\\num{'+str('{:.2e}'.format(E))+'}'
=>PYTHONTEX#py#default#default#41#i#####5171#
'\\num{'+str('{:.2e}'.format(S_y))+'}'
=>PYTHONTEX#py#default#default#42#i#####5171#
round(lambda_c,2)
=>PYTHONTEX#py#default#default#43#i#####5171#
K
=>PYTHONTEX#py#default#default#44#i#####5171#
L
=>PYTHONTEX#py#default#default#45#i#####5171#
r_g
=>PYTHONTEX#py#default#default#46#i#####5171#
round(K*L/r_g,2)
=>PYTHONTEX#py#default#default#40#i#####5171#
'\\num{'+str('{:.2e}'.format(E))+'}'
=>PYTHONTEX#py#default#default#41#i#####5171#
'\\num{'+str('{:.2e}'.format(S_y))+'}'
=>PYTHONTEX#py#default#default#42#i#####5171#
round(lambda_c,2)
=>PYTHONTEX#py#default#default#43#i#####5171#
K
=>PYTHONTEX#py#default#default#44#i#####5171#
L
=>PYTHONTEX#py#default#default#45#i#####5171#
r_g
=>PYTHONTEX#py#default#default#46#i#####5171#
round(K*L/r_g,2)
=>PYTHONTEX#py#default#default#47#code#####5273#
    F = 100000
    L = 4
    M = F*L/8
    Ns = 3
    sigmaallow = 300 * 10**6 / Ns
    designation = ['S610 x 149', 'S510 x 143', 'S460 x 104', 'S380 x 74', 'S310 x 74', 'S250 x 52']
    Area = [18900*10**-6, 18200*10**-6, 13200*10**-6, 9480*10**-6, 9420*10**-6, 6650*10**-6]
    S = [3260 * 10**-6, 2700 * 10**-6, 1690*10**-6, 1060*10**-6, 829*10**-6, 482*10**-6]
=>PYTHONTEX#py#default#default#48#i#####5284#
int(M)
=>PYTHONTEX#py#default#default#49#i#####5296#
sigmaallow/1000000
=>PYTHONTEX#py#default#default#49#i#####5296#
sigmaallow/1000000
=>PYTHONTEX#py#default#default#50#code#####5303#
    print(r'\begin{table}[H]')
    print(r'\centering')
    print(r'\begin{tabular}{lccc}')
    print(r'\toprule')
    print(r'Designation & Axial Stress (MPa) & Bending Stress (MPa) & $\dfrac{\sigma _a + \sigma_b}{\sigma_{allow}}$ \\')
    print('\midrule')
    for i in range(6):
        print(r'%s & %.2f & %.2f & %.2f \\' %(designation[i],F/2/Area[i]/10**6,M/S[i]/10**6,(F/2/Area[i] + M/S[i])/sigmaallow))
    print(r'\bottomrule')
    print(r'\end{tabular}')
    print(r'\end{table}')
=>PYTHONTEX#py#default#default#51#code#####8272#
    N_s = 3.0
    P   = 500.0
    S_p = 225 * 10**6
    N   = 2.0
    A_t = N_s * P / N / S_p
=>PYTHONTEX#py#default#default#52#i#####8284#
round(A_t,7)
=>PYTHONTEX#py#default#default#53#i#####8284#
round(A_t * 10**6,2)
=>PYTHONTEX#py#default#default#52#i#####8284#
round(A_t,7)
=>PYTHONTEX#py#default#default#53#i#####8284#
round(A_t * 10**6,2)
=>PYTHONTEX#py#default#default#54#code#####8306#
    P = 2000
    angle = 30
    N_s = 2
    S_p = 225*10**6
    mu = 0.5
    theta = math.radians(angle)
    P_axial = 2000*math.sin(theta)
    P_shear = 2000*math.cos(theta)
    A_t = N_s*(P_axial/S_p + P_shear/0.75/mu/S_p)
=>PYTHONTEX#py#default#default#55#i#####8324#
P
=>PYTHONTEX#py#default#default#56#i#####8324#
angle
=>PYTHONTEX#py#default#default#57#i#####8324#
round(P_axial)
=>PYTHONTEX#py#default#default#58#i#####8324#
P
=>PYTHONTEX#py#default#default#59#i#####8324#
angle
=>PYTHONTEX#py#default#default#60#i#####8324#
round(P_shear)
=>PYTHONTEX#py#default#default#61#i#####8324#
N_s
=>PYTHONTEX#py#default#default#62#i#####8324#
S_p
=>PYTHONTEX#py#default#default#63#i#####8324#
round(P_shear)
=>PYTHONTEX#py#default#default#64#i#####8324#
mu
=>PYTHONTEX#py#default#default#65#i#####8324#
round(P_axial)
=>PYTHONTEX#py#default#default#66#i#####8324#
'\\num{'+str('{:.2e}'.format(A_t))+'}'
=>PYTHONTEX#py#default#default#55#i#####8324#
P
=>PYTHONTEX#py#default#default#56#i#####8324#
angle
=>PYTHONTEX#py#default#default#57#i#####8324#
round(P_axial)
=>PYTHONTEX#py#default#default#58#i#####8324#
P
=>PYTHONTEX#py#default#default#59#i#####8324#
angle
=>PYTHONTEX#py#default#default#60#i#####8324#
round(P_shear)
=>PYTHONTEX#py#default#default#61#i#####8324#
N_s
=>PYTHONTEX#py#default#default#62#i#####8324#
S_p
=>PYTHONTEX#py#default#default#63#i#####8324#
round(P_shear)
=>PYTHONTEX#py#default#default#64#i#####8324#
mu
=>PYTHONTEX#py#default#default#65#i#####8324#
round(P_axial)
=>PYTHONTEX#py#default#default#66#i#####8324#
'\\num{'+str('{:.2e}'.format(A_t))+'}'
=>PYTHONTEX#py#default#default#67#code#####8959#
    N_s = 2
    F = 700
    H = 0.005
    S_ut = 427*10**6
    L = F*N_s/H/S_ut
=>PYTHONTEX#py#default#default#68#i#####8971#
N_s
=>PYTHONTEX#py#default#default#69#i#####8971#
F
=>PYTHONTEX#py#default#default#70#i#####8971#
H
=>PYTHONTEX#py#default#default#71#i#####8971#
'\\num{'+str('{:.2e}'.format(S_ut))+'}'
=>PYTHONTEX#py#default#default#72#i#####8971#
'\\num{'+str('{:.2e}'.format(L))+'}'
=>PYTHONTEX#py#default#default#68#i#####8971#
N_s
=>PYTHONTEX#py#default#default#69#i#####8971#
F
=>PYTHONTEX#py#default#default#70#i#####8971#
H
=>PYTHONTEX#py#default#default#71#i#####8971#
'\\num{'+str('{:.2e}'.format(S_ut))+'}'
=>PYTHONTEX#py#default#default#72#i#####8971#
'\\num{'+str('{:.2e}'.format(L))+'}'
=>PYTHONTEX#py#default#default#73#i#####8973#
'{:.5f}'.format(L)
=>PYTHONTEX#py#default#default#74#i#####8975#
F
=>PYTHONTEX#py#default#default#75#i#####8975#
round(F/2)
=>PYTHONTEX#py#default#default#76#code#####8996#
    P_axial = F/2
    S_p = 225 * 10**6
    A_t = N_s * P_axial / S_p
=>PYTHONTEX#py#default#default#77#i#####9006#
N_s
=>PYTHONTEX#py#default#default#78#i#####9006#
'\\num{'+str('{:.2e}'.format(S_p))+'}'
=>PYTHONTEX#py#default#default#79#i#####9006#
N_s
=>PYTHONTEX#py#default#default#80#i#####9006#
round(P_axial)
=>PYTHONTEX#py#default#default#81#i#####9006#
'\\num{'+str('{:.2e}'.format(S_p))+'}'
=>PYTHONTEX#py#default#default#82#i#####9006#
'\\num{'+str('{:.2e}'.format(A_t))+'}'
=>PYTHONTEX#py#default#default#77#i#####9006#
N_s
=>PYTHONTEX#py#default#default#78#i#####9006#
'\\num{'+str('{:.2e}'.format(S_p))+'}'
=>PYTHONTEX#py#default#default#79#i#####9006#
N_s
=>PYTHONTEX#py#default#default#80#i#####9006#
round(P_axial)
=>PYTHONTEX#py#default#default#81#i#####9006#
'\\num{'+str('{:.2e}'.format(S_p))+'}'
=>PYTHONTEX#py#default#default#82#i#####9006#
'\\num{'+str('{:.2e}'.format(A_t))+'}'
=>PYTHONTEX#py#default#default#83#code#####10029#
    d = 0.0006
    A = 1783
    m = 0.190
    zeta = 0.15
    N_s = 1.25
    F_max = 10
    alpha = 0.5*A/(d*10**3)**m / N_s
    beta = 8*(1+zeta)*F_max/(3.142 * d**2)/10**6
    C = (2*alpha - beta)/(4*beta) + (((2*alpha - beta)/(4*beta))**2 - (3*alpha/(4*beta)))**0.5
    G = 77.2 * 10**9
    d = 0.0006
    k = 500
    N_a = G*d/8/C**3/k
    delta = 0.02
    p = delta/0.8/N_a + d
=>PYTHONTEX#py#default#default#84#i#####10051#
round(C,2)
=>PYTHONTEX#py#default#default#84#i#####10051#
round(C,2)
=>PYTHONTEX#py#default#default#85#i#####10053#
8.26*6*10**-4
=>PYTHONTEX#py#default#default#86#i#####10059#
int(N_a)
=>PYTHONTEX#py#default#default#86#i#####10059#
int(N_a)
=>PYTHONTEX#py#default#default#87#i#####10068#
round(p,6)
=>PYTHONTEX#py#default#default#87#i#####10068#
round(p,6)
=>PYTHONTEX#py#default#default#88#code#####10079#
    S_y = 300 * 10**6
    b = 0.3
    h = 0.05
    N_s = 2
    L = 3
    F = S_y*b*h**2/6/N_s/L
=>PYTHONTEX#py#default#default#89#i#####10091#
int(F)
=>PYTHONTEX#py#default#default#89#i#####10091#
int(F)
=>PYTHONTEX#py#default#default#90#code#####10096#
    L = 0.3
    S_ut = 551 * 10**6
    L_b = 3
    d_0 = 0.025
    H = 0.005
    N_s = 4
    F = S_ut*2*(L*H**3/12 + H*L**3/12 + L*H*d_0**2)/N_s/L_b/d_0
=>PYTHONTEX#py#default#default#91#i#####10109#
int(F)
=>PYTHONTEX#py#default#default#91#i#####10109#
int(F)
=>PYTHONTEX#py#default#default#92#code#####10129#
    N_s = 3
    P_sf = 833/2.0
    P_sr = 4167/2.0
    mu = 0.5
    S_p = 600
    A_tf = N_s * P_sf / 0.75 / mu / S_p
    A_tr = N_s * P_sr / 0.75 / mu / S_p
=>PYTHONTEX#py#default#default#93#i#####10145#
round(A_tf,2)
=>PYTHONTEX#py#default#default#94#i#####10145#
round(A_tr,2)
=>PYTHONTEX#py#default#default#93#i#####10145#
round(A_tf,2)
=>PYTHONTEX#py#default#default#94#i#####10145#
round(A_tr,2)
=>PYTHONTEX#py#default#default#95#code#####10158#
    A = 1783
    m = 0.190
    N_s = 2
    F_max = 500
    C = 4
    G = 79.3 * 10**9
    k = 2500
    d = (8*(4*C+2)/(4*C-3)*F_max*C/3.142/0.5/A*2)**(2-m)
    N_a = G*d/8/C**3/k*10**-3
=>PYTHONTEX#py#default#default#96#i#####10173#
int(d)
=>PYTHONTEX#py#default#default#96#i#####10173#
int(d)
=>PYTHONTEX#py#default#default#97#i#####10180#
int(N_a)
=>PYTHONTEX#py#default#default#97#i#####10180#
int(N_a)
=>PYTHONTEX#py#default#default#98#code#####10184#
    N_s = 3
    S_p = 6 * 10**8
    P   = 500
    A_t = N_s * P / S_p
=>PYTHONTEX#py#default#default#99#i#####10193#
round(A_t,7)
=>PYTHONTEX#py#default#default#99#i#####10193#
round(A_t,7)
=>PYTHONTEX#py#default#default#100#code#####10199#
    N_s  = 3
    S_ut = 482 * 10**6
    P    = 1000
    H    = 0.003
    L    = N_s * P / S_ut / H
=>PYTHONTEX#py#default#default#101#i#####10210#
round(L,5)
=>PYTHONTEX#py#default#default#101#i#####10210#
round(L,5)
=>PYTHONTEX#sympy#default#default#0#code#####10495#
    var('r,theta,R')
    j = r**3
    J = Integral(Integral(j,(r,0,R)),(theta,0,2*pi))

    print(r'\begin{align*}')
    print(r'J' + '&=' + latex(J) + r'\\')
    right = Integral(Integral(j,(r,0,R)).doit(),(theta,0,2*pi))
    print('&=' + latex(right) + r'\\')
    right = Integral(Integral(j,(r,0,R)),(theta,0,2*pi)).doit()
    print('&=' + latex(right))
    print(r'\end{align*}')
=>PYTHONTEX#sympy#default#default#1#code#####10513#
    var('r,theta,R,R_i')
    j = r**3
    J = Integral(Integral(j,(r,R_i,R)),(theta,0,2*pi))

    print(r'\begin{align*}')
    print(r'J' + '&=' + latex(J) + r'\\')
    right = Integral(Integral(j,(r,R_i,R)).doit(),(theta,0,2*pi))
    print('&=' + latex(right) + r'\\')
    right = Integral(Integral(j,(r,R_i,R)),(theta,0,2*pi)).doit()
    print('&=' + latex(right))
    print(r'\end{align*}')
=>PYTHONTEX#sympy#default#default#2#code#####10544#
    var('b,y,h')
    i = b*y**2/(h/2)
    I = Integral(i,(y,-h/2,h/2))

    print(r'\begin{align*}')
    print(r'I' + '&=' + latex(I) + r'\\')
    I = I.doit()
    print('&=' + latex(I))
    print(r'\end{align*}')
=>PYTHONTEX:SETTINGS#
version=0.17
outputdir=pythontex-files-_region_
workingdir=.
workingdirset=false
gobble=auto
rerun=default
hashdependencies=default
makestderr=false
stderrfilename=full
keeptemps=none
pyfuture=default
pyconfuture=none
pygments=true
pygglobal=:GLOBAL||
fvextfile=-1
pyconbanner=none
pyconfilename=stdin
depythontex=false
pygfamily=py|python3|
pygfamily=pycon|pycon|
pygfamily=sympy|python3|
pygfamily=sympycon|pycon|
pygfamily=pylab|python3|
pygfamily=pylabcon|pycon|
