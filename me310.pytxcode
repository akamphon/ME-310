=>PYTHONTEX#py#default#default#0#i#####4149#
round((1200*10**6)**(2/3)/7800,0)
=>PYTHONTEX#py#default#default#1#i#####4150#
round((350*10**6)**(2/3)/1500,0)
=>PYTHONTEX#py#default#default#2#i#####4151#
round((400*10**6)**(2/3)/2300,0)
=>PYTHONTEX#py#default#default#3#i#####4172#
round((2*4*750/350/10**6/3.1416)**(1/3),4)
=>PYTHONTEX#py#default#default#3#i#####4172#
round((2*4*750/350/10**6/3.1416)**(1/3),4)
=>PYTHONTEX#py#default#default#4#code#####4638#
    import math
    N = 2
    F1 = 100
    F2 = 300
    L_l = 0.25
    L_r = 0.25
    L   = 1
    theta = math.radians(15)
    F_l = (F2*L_r + F1*(L - L_l))/L
    F_r = F1 + F2 - F_l
    M = F_r * L_r * math.cos(theta)
    sigma_y = 300 * 10**6
    S = N * M / sigma_y
=>PYTHONTEX#py#default#default#5#i#####4654#
int(F_l)
=>PYTHONTEX#py#default#default#6#i#####4654#
int(F_r)
=>PYTHONTEX#py#default#default#7#i#####4692#
round(M,1)
=>PYTHONTEX#py#default#default#8#i#####4697#
N
=>PYTHONTEX#py#default#default#9#i#####4697#
round(M,1)
=>PYTHONTEX#py#default#default#10#i#####4697#
sigma_y
=>PYTHONTEX#py#default#default#11#i#####4697#
'{:.2E}'.format(S)
=>PYTHONTEX#py#default#default#8#i#####4697#
N
=>PYTHONTEX#py#default#default#9#i#####4697#
round(M,1)
=>PYTHONTEX#py#default#default#10#i#####4697#
sigma_y
=>PYTHONTEX#py#default#default#11#i#####4697#
'{:.2E}'.format(S)
=>PYTHONTEX#py#default#default#12#code#####4799#
    F = 100000
    L = 4
    M = F*L/8
    Ns = 3
    sigmaallow = 300 * 10**6 / Ns
    designation = ['S610 x 149', 'S510 x 143', 'S460 x 104', 'S380 x 74', 'S310 x 74', 'S250 x 52']
    Area = [18900*10**-6, 18200*10**-6, 13200*10**-6, 9480*10**-6, 9420*10**-6, 6650*10**-6]
    S = [3260 * 10**-6, 2700 * 10**-6, 1690*10**-6, 1060*10**-6, 829*10**-6, 482*10**-6]
=>PYTHONTEX#py#default#default#13#i#####4810#
int(M)
=>PYTHONTEX#py#default#default#14#code#####4812#
    print(r'\begin{center}')
    print(r'\begin{tabular}{lccc}')
    print(r'\toprule')
    print(r'Designation & Axial Stress (MPa) & Bending Stress (MPa) & $\dfrac{\sigma _a}{(\sigma_a)_{allow}} + \dfrac{\sigma_b}{(\sigma_b)_{allow}}$ \\')
    print('\midrule')
    for i in range(6):
        print(r'%s & %.2f & %.2f & %.2f \\' %(designation[i],F/Area[i]/10**6,M/S[i]/10**6,(F/Area[i] + M/S[i])/sigmaallow))
    print(r'\bottomrule')
    print(r'\end{tabular}')
    print(r'\end{center}')
